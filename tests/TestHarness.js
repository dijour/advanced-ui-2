/*
 * To create your own tests, extend the TestHarness class. Do not edit this file.
   See testTestHarness for an example.
 */
class TestHarness {
  constructor(topGraphics) {
    this.testRig = new TestRig(); // initializes the testing output, do not change
    this.topGraphics = topGraphics;
  }

  async runTest() {
    // Test operations go here
  }

  message(str) {
    this.testRig.message(str);
  }

  async waitForUser() {
    return this.testRig.waitForUser();
  }
  RandomInt(num) {
		return Math.floor(Math.random() * (num));
	}
	sleep(milliseconds) { 
		let timeStart = new Date().getTime(); 
		while (true) { 
			let elapsedTime = new Date().getTime() - timeStart; 
			if (elapsedTime > milliseconds) { 
				break; 
			} 
		} 
	}
}

/*
 * Do not change the testing rig.
 */
class TestRig {
  constructor() {
    this.testConsole = document.getElementById("testConsole_text");
  }

  async waitForUser() {
    this.waitMessage();
    return new Promise(accept => {
      document.addEventListener("click", () => accept(), { once: true });
    });
  }

  waitMessage() {
    let msg = document.createElement("p");
    msg.classList.add("waitMessage");
    msg.innerHTML = "&nbsp;&nbsp;&nbsp;Please click to continue ...";
    this.testConsole.prepend(msg);
  }

  message(str) {
    let msg = document.createElement("p");
    msg.innerHTML = str;
    this.testConsole.prepend(msg);
  }
}
